{
	"info": {
		"_postman_id": "418017de-6648-4532-85b7-0f1408d11544",
		"name": "MEAL_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Search meal by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/search.php?s=Arrabiata",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"search.php"
					],
					"query": [
						{
							"key": "s",
							"value": "Arrabiata"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List all meals by first letter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/search.php?f=a",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"search.php"
					],
					"query": [
						{
							"key": "f",
							"value": "a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Lookup full meal details by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 6000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/lookup.php?i=52772",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"lookup.php"
					],
					"query": [
						{
							"key": "i",
							"value": "52772"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Lookup a single random meal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/random.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"random.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all meal categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/categories.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"categories.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/list.php?c=list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"list.php"
					],
					"query": [
						{
							"key": "c",
							"value": "list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List all Area",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/list.php?a=list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"list.php"
					],
					"query": [
						{
							"key": "a",
							"value": "list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List all Ingredients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 6000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/list.php?i=list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"list.php"
					],
					"query": [
						{
							"key": "i",
							"value": "list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Filter by main ingredient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/filter.php?i=chicken_breast",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"filter.php"
					],
					"query": [
						{
							"key": "i",
							"value": "chicken_breast"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Filter by Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 8000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/filter.php?c=Seafood",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"filter.php"
					],
					"query": [
						{
							"key": "c",
							"value": "Seafood"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Filter by Area",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"/**pm.test(\"Broken authorization\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Roles access denied -forbidden\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});**/\r",
							"pm.test(\"Response time is less than 6000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/json/v1/1/filter.php?a=Canadian",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"json",
						"v1",
						"1",
						"filter.php"
					],
					"query": [
						{
							"key": "a",
							"value": "Canadian"
						}
					]
				}
			},
			"response": []
		}
	]
}